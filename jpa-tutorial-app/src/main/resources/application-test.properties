#Remember removing test scope from H2 dependency for using H2 for Spring Application
#But this is just a work-around. In actual project we don't want H2 on runtime scope
# What we can do it to create a maven profile named h2 and then put h2 dependency in it and run it.
#Hibernate
spring.jpa.properties.hibernate.show_sql=true
#Format sql
spring.jpa.properties.hibernate.format_sql=true

server.port= 8900
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:demoApp
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#for MySQL Compatibility we can use MySQL dialect and H2 URL with some tricks
#spring.datasource.url=jdbc:h2:mem:demoApp;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto = update

spring.sql.init.mode=NEVER
spring.flyway.enabled=false