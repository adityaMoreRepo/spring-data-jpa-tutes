#Server
server.port=9200

#DataSource
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/student_schema
spring.datasource.username=postgres
spring.datasource.password=1432

#Loggin Level
#logging.level.root=debug
#logging.level.root=info

#JPA
#Generic
#spring.jpa.show-sql = true

#Hibernate
spring.jpa.properties.hibernate.show_sql=true
#Format sql
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.ddl-auto = none
#spring.jpa.hibernate.ddl-auto = validate
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.PostgreSQLDialect
#Show bind values
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#script-based initialization is performed by default only for embedded databases,
#to always initialize a database using scripts
#spring.sql.init.mode=always


#Actuator Management and monitoring configurations
#we can include everything or exclude everything or configure it
#management.endpoints.web.exposure.include= *
#management.endpoint.health.show-details=always


#Flyway
spring.flyway.enable=false
spring.flyway.baseline-on-migrate=false
spring.flyway.locations=classpath:db/migration/postgres
spring.flyway.url =jdbc:postgresql://localhost:5432/student_schema
spring.flyway.user=postgres
spring.flyway.password=1432
#In Flyway for vendor specific migrations i.e. when a need arises to
#we might need two databases like here different profiles. We might switch off the
#flyway for test or use vendor specific scripts for H2 database for testing.
#By creating a common directory and then the vendor specific directory.
#spring.flyway.locations=classpath:db/migration/common, classpath:db/migration/{vendor}


